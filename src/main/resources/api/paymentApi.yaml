openapi: 3.0.0
info:
  title: Payment Service API
  version: "1.0.0"

servers:
  - url: http://localhost:8080/api

paths:
  /accounts:
    post:
      operationId: createAccount
      summary: Создать новый банковский счёт (кошелёк)
      description: |
        Создаёт банковский счёт‑контейнер. При создании можно сразу передать список
        валютных субсчетов (currencyAccounts) с начальными балансами, либо оставить
        массив пустым — тогда валютные счета можно открыть позднее.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BankAccountCreateRequest'
      responses:
        '201':
          description: Счёт успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'
        '400':
          description: Некорректные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /accounts/{accountId}:
    get:
      operationId: getAccount
      summary: Получить информацию о банковском счёте‑контейнере
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Информация о счёте и его валютных субсчетах
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BankAccountResponse'
        '400':
          description: Некорректный идентификатор
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: Счёт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

components:
  schemas:

    # ────────── Bank Account (кошелёк клиента) ──────────
    BankAccountCreateRequest:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
          description: ID клиента
        accountNumber:
          type: string
          description: Внешний номер/IBAN кошелька
        currencyAccounts:
          type: array
          description: Начальный набор валютных субсчетов
          items:
            $ref: '#/components/schemas/CurrencyAccountCreate'
      required:
        - customerId
        - accountNumber

    BankAccountResponse:
      type: object
      properties:
        customerId:
          type: integer
          format: int64
        accountNumber:
          type: string
        currencyAccounts:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyAccount'
      required:
        - bankAccountId
        - customerId
        - accountNumber
        - currencyAccounts

    # ────────── Currency sub‑accounts ──────────
    CurrencyAccountCreate:
      type: object
      properties:
        currencyType:
          type: string
          description: Код валюты ISO‑4217 (например, "USD")
        balance:
          type: number
          format: double
          description: Начальный остаток в указанной валюте
      required:
        - currency
        - balance

    CurrencyAccount:
      allOf:
        - $ref: '#/components/schemas/CurrencyAccountCreate'
        - type: object


    # ────────── Ошибка ─────────
    ErrorDTO:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
      required:
        - timestamp
        - status
        - error
        - message
        - path
